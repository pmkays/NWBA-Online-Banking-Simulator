version: '3.8'
services:
  database:
    image: microsoft/mssql-server-linux:2017-latest
    container_name: mssql
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=YourSTRONG!Passw0rd
    ports:
      - '1401:1433'
    volumes:
      - bank:/var/opt/mssql #use a named volume for DB persistence
  app:
    container_name: nwba-app
    build:
      context: .
      dockerfile: ./Deployment/Docker/App.Dockerfile
    environment:
      - ConnectionStrings:NWBAConnectionString=Server=mssql;Database=Bank;User=SA;Password=YourSTRONG!Passw0rd
      - ASPNETCORE_ENVIRONMENT=”Development”
    ports:
      - '8080:80'
    volumes:
      - keys:/root/.aspnet/DataProtection-Keys #.net core uses a data protection api to validate requests so keys must be stored
    depends_on:
      - "database"
    restart: on-failure #the DB won't be ready before the app will try make a connection, so this line is essential
  api:
    container_name: nwba-api
    build:
      context: .
      dockerfile: ./Deployment/Docker/Api.Dockerfile
    environment:
      - ConnectionStrings:NWBAConnectionString=Server=mssql;Database=Bank;User=SA;Password=YourSTRONG!Passw0rd
      - ASPNETCORE_ENVIRONMENT=”Development”
    ports: #in case we want to access this api elsewhere, but the admin app uses the container name
      - '44343:80'
    depends_on:
      - "app"
  admin:
    container_name: nwba-admin
    build:
      context: .
      dockerfile: ./Deployment/Docker/Admin.Dockerfile
    environment:
      - ConnectionStrings:APIConnectionString=http://nwba-api #use network container name for connection
      - ASPNETCORE_ENVIRONMENT=”Development”
    ports:
      - '44317:80'
    volumes:
      - keys:/root/.aspnet/DataProtection-Keys #.net core uses a data protection api to validate requests so keys must be stored
    depends_on:
      - "api"
volumes:
  bank:
  keys: